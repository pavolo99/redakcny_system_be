micronaut:
  security:
    authentication: cookie
    token:
      jwt:
        signatures:
          secret:
            generator:
              secret: '${JWT_GENERATOR_SIGNATURE_SECRET:E)H@McQfTjWnZr4u7x!z%C*F-JaNdRgU}'
        claims-validators:
          issuer: 'redakcny-system-be'
    oauth2:
      clients:
        github:
          client-id: '${GITHUB_OAUTH_CLIENT_ID:Iv1.7f311c1dd843f6fb}'
          client-secret: '${GITHUB_OAUTH_CLIENT_SECRET:02c2e04b9e24f1a65794db909597dfe67d165f53}'
          scopes:
            - read:user
          authorization:
            url: 'https://github.com/login/oauth/authorize'
          token:
            url: 'https://github.com/login/oauth/access_token'
            auth-method: CLIENT_SECRET_POST

        gitlab:
          client-id: '${GITLAB_OAUTH_CLIENT_ID:afef94df75f368edbb735303e7b8fa5c7141131aed8239126055dabba80acc8c}'
          client-secret: '${GITLAB_OAUTH_CLIENT_SECRET:be993a6796915485219d444ad470d35cb3447463e4e8a57c9dc4979b1340bed3}'
          scopes:
            - read_user
          authorization:
            url: 'https://git.kpi.fei.tuke.sk/oauth/authorize'
          token:
            url: 'https://git.kpi.fei.tuke.sk/oauth/token'
            auth-method: CLIENT_SECRET_POST
    endpoints:
      logout:
        get-allowed: true
    redirect:
      login-success: 'http://localhost:8080/login-callback'
  #      login-success: 'http://192.168.0.59:8080/login-callback'

  application:
    name: redakcny_system_be
    front-end-url: 'http://localhost:3000'
    #    front-end-url: 'http://192.168.0.59:3000'
    back-end-url: 'http://localhost:8080'
  #    front-end-url: 'http://192.168.0.59:8080'
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      rapidoc:
        paths: classpath:META-INF/swagger/views/rapidoc
        mapping: /rapidoc/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**
  server:
    cors:
      enabled: true
      configurations:
        web:
          allowedOrigins:
            - http://localhost:8080
            - http://localhost:3000
            - http://192.168.0.59:8080
            - http://192.168.0.59:3000

datasources:
  default:
    url: jdbc:postgresql://localhost:5432/postgres
    driverClassName: org.postgresql.Driver
    username: postgres
    password: 'sa'
    schema-generate: CREATE_DROP
    dialect: POSTGRES

jpa:
  default:
    properties:
      hibernate:
        hbm2ddl:
          auto: none
        show_sql: true
