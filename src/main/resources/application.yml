micronaut:
  security:
    authentication: cookie
    token:
      jwt:
        signatures:
          secret:
            generator:
              secret: ${JWT_GENERATOR_SIGNATURE_SECRET}
        claims-validators:
          issuer: 'redakcny-system-be'
    oauth2:
      clients:
        github:
          client-id: ${GITHUB_OAUTH_CLIENT_ID}
          client-secret: ${GITHUB_OAUTH_CLIENT_SECRET}
          scopes:
            - read:user
          authorization:
            url: 'https://github.com/login/oauth/authorize'
          token:
            url: 'https://github.com/login/oauth/access_token'
            auth-method: CLIENT_SECRET_POST

        gitlab:
          client-id: ${GITLAB_OAUTH_CLIENT_ID}
          client-secret: ${GITLAB_OAUTH_CLIENT_SECRET}
          scopes:
            - read_user
          authorization:
            url: 'https://git.kpi.fei.tuke.sk/oauth/authorize'
          token:
            url: 'https://git.kpi.fei.tuke.sk/oauth/token'
            auth-method: CLIENT_SECRET_POST
    endpoints:
      logout:
        get-allowed: true
    redirect:
      login-success: ${LOGIN_SUCCESS_CALLBACK_URL}
  application:
    name: redakcny_system_be
    front-end-url: ${FRONTEND_URL}
    back-end-url: ${BACKEND_URL}
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      rapidoc:
        paths: classpath:META-INF/swagger/views/rapidoc
        mapping: /rapidoc/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**
  server:
    host-resolution:
      protocol-header: 'X-Forwarded-Proto'
    cors:
      enabled: true
      configurations:
        web:
          allowedOrigins:
            - http://localhost:8080
            - http://localhost:3000
            - http://192.168.0.59:8080
            - http://192.168.0.59:3000

datasources:
  default:
    url: ${DATABASE_URL}
    driverClassName: org.postgresql.Driver
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    schema-generate: CREATE_DROP
    dialect: POSTGRES

jpa:
  default:
    properties:
      hibernate:
        hbm2ddl:
          auto: none
        show_sql: false
